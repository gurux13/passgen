<?php
header("Content-Type: text/html; charset=utf-8");
define("DEFAULT_PASSWORD_LENGTH", "12");
function dump_str($s) {
	$rv = "";
	
	for($i = 0; $i < strlen ( $s ); ++ $i) {
		$rv .= sprintf ( "%X ", ord ( $s [$i] ) );
	
	}
	
	return $rv;
}

function generate($master, $resource, $length, $rev, $restrictions) {
	$salt = "The very special salt for passwords that will be generated by gurux13 special super puper crypto soft";
	if ($rev == 0)
		$rev = "";
	$pass = $salt . $rev . $master . $salt . $resource . $length;
	$allowedSymbols = array();
	$digits = 0;
	$letters = 0;
	$symbols = 0;
	$underscore = 0;
	if ($restrictions == "")
	{
		$digits = $letters = $symbols = 1;
	}
	else
	switch ($restrictions)
	{
		case "noSymbols":
			$digits = $letters = 1;
			break;
		case "limitedSymbols":
			$digits = $letters = $underscore = 1;
			break;
		case "letters":
			$letters = 1;
			break;
		case "digits":
			$digits = 1; 
			break;
	}
	
	if ($digits)
	{
		for ($c = 0; $c <= 9; ++$c)
		{
			$allowedSymbols [] = $c."";
		}
	}
	if ($letters)
	{
		for ($c = 'a'; $c <= 'z'; ++$c)
		{
			$allowedSymbols [] = $c;
			$allowedSymbols [] = strtoupper($c);
		}
	}
	if ($underscore)
	{
		$allowedSymbols[] = '_';
	}
	$strSymbols = '-+_=!@#$%^&*(),./:;';
	if ($symbols)
	{
		$allowedSymbols = array_merge($allowedSymbols, str_split($strSymbols));
	}
	for($i = 0; $i < 20; ++ $i) {
		$pass .= hash ( "sha1", $pass, true );
	}
	
	//if (CRYPT_SHA256 == 1) {
	if (!$letters)
		$pass = hash ( "sha512", $pass, true );
	else
		$pass = hash ( "sha256", $pass, true );
	
	$pass = base64_encode ( $pass );
	for ($i = 0; $i < strlen($pass); ++$i)
	{
		if (!in_array($pass[$i], $allowedSymbols))
		{
			$pass = substr($pass, 0, $i).substr($pass, $i + 1);
			--$i;
		}
	}
	$pass = substr ( $pass, 0, $length );
	$info_data = hash ( "sha256", $pass, true );
	$position = ord ( $info_data [0] ) % $length;
	$digit = ord ( $info_data [1] ) % 10;
	if ($digits)
		$pass [$position] = $digit;
	$position2 = ord ( $info_data [2] ) % $length;
	$idx = 3;
	while ( $position == $position2 && $idx < 32 ) {
		$position2 = $info_data [$idx ++] % $length;
	}
	for ($i = 0; $i < strlen($info_data); ++$i)
	{
		echo ord($info_data[$i])." ";
	}
	echo "<br>";
	echo "Position2: $position2<br>Idx: $idx<br>";
	$symbolCode = ord ( $info_data [3] ) % strlen ( $strSymbols );
	if ($symbols || ($strSymbols[$symbolCode] == '_' && $underscore))
		$pass [$position2] = $strSymbols [$symbolCode];
	//}
	return $pass;
}


header ( "Content-type: text/html; charset=utf8" );
/*if (! isset ( $_SERVER ['HTTPS'] ) || ! $_SERVER ['HTTPS']) {
	header ( "Location: https://" . $_SERVER ['HTTP_HOST'] . $_SERVER ['REQUEST_URI'] );
	die ();
}*/
if (! isset ( $_SERVER ['HTTPS'] ) || ! $_SERVER ['HTTPS']) {
	echo '<h1 style="color:red">Используется небезопасное соединение!</h1>';
}
?>
<html>
<head>
<meta charset="utf-8">
<meta name="Content-type" content="text/html; charset=utf8">
<style type="text/css">
<!--
table {
	border-collapse: collapse;
}

table td {
	padding: 7px;
	border: 1px dashed #BE9;
}

.passes td {
	border: 1px solid black;
	padding: 5px;
}

body {
	background-color: #CFA
}

.input-master {
	background-color: #AFF
}
input[type=text], input[type=password] {
	width: 100%
}
-->
</style>
</head>
<body onload="resource_changed();">
<h2 style="color: red">Устаревшая версия. Пожалуйста, используйте <a href="/index.php">эту</a>.</h2>
<?php

@$datafile = file_get_contents ( "resources.cfg" );
if ($datafile) {
	$options = explode ( "\n", $datafile );
} else
	$options = array ('gmail.com', 'mail.ru', 'vkontakte.ru', 'cracklab.ru', 'msdn.com', 'elms' );
sort ( $options );
$options_revs = Array();

foreach ($options as $option) {
	$pcs = explode("\1", $option);
	$name = $pcs[0];
	$rev = 0;
	$restrictions = "";
	if (count($pcs) >= 2)
		$rev = intval($pcs[1]);
	if (count($pcs) >= 3)
		$restrictions = ($pcs[2]);
	$len = DEFAULT_PASSWORD_LENGTH;
	if (count($pcs) >= 4)
		$len = ($pcs[3]);
	if (intval($len) == 0)
		$len = DEFAULT_PASSWORD_LENGTH;
	$options_revs[] = array('Name'=>$name, 'Rev' => $rev, "Restrict" => $restrictions, "Len"=>$len);
	
}

$options = $options_revs;
if (isset ( $_REQUEST ['generate'] )) {
	$resource = $_REQUEST ['for'];
	$custom = $_REQUEST ['custom'];
	$len = $_REQUEST ['length'];
	$rev = $_REQUEST ['revision'];
	$restrictions = $_REQUEST['restrictions'];
	$resource = strtolower ( $resource );
	$custom = strtolower ( $custom );
	$options_glued = array();
	$oldCustom = $custom == "";
	foreach ($options as &$option) {
		if (!$custom && $option['Name'] == $resource)
		{
			$option['Rev'] = $rev;
			$option['Restrict'] = $restrictions;
			$option['Len'] = $len;
		}
		if ($custom && $option['Name'] == $custom)
			$oldCustom = true;
		$options_glued [] = implode("\1", $option);
	}

	/*if ($custom == "")
	for ($i = 0; $i < count($options);++$i)
	{
		if ($options[$i]['Name'] == $resource)
		{
			$options[$i]['Rev'] = $rev;
			
	}*/
	if (!$oldCustom)
	{
		$options_glued[] = $custom . "\1".$rev;
		$options[] = array('Name'=>$custom, 'Rev'=>$rev, 'Len'=>$len);
	}
	sort($options_glued);
	file_put_contents ( 'resources.cfg', implode ( "\n", $options_glued ) );
	$master = $_REQUEST ['master'];
	?>
<h2>Сгенерировано</h2>
<table cellspacing="0" border="0" class="passes">
	
	
	<?php
	
	echo "<tr><td>Master password<br/>SHA1 two bytes</td><td>" . strtoupper(substr ( sha1($master), 0, 4 )). '</td></tr>';
	if ($custom)
		echo "<tr><td>{$custom}[$rev]</td><td style=\"background-color: lightgreen\">" . generate ( $master, $custom, $len, $rev, $restrictions ) . '</td></tr>';
	else
		echo "<tr><td>{$resource}[$rev]</td><td style=\"background-color: lightgreen\">" . generate ( $master, $resource, $len, $rev, $restrictions ) . '</td></tr>';
	?>
	</table>
<?php
}
	$script = '<script type="text/javascript"> var keyval = {';

	foreach ($options as $option) {
		@$script .= '"'.$option['Name'].'": {Rev:'.$option['Rev'].', Restrict: "'.$option['Restrict'].'", Len: '.$option['Len'].'},';
	}
	$script .= '"void value not to be used": {Rev:1, Restrict: ""}}</script>';
	echo $script;

if (isset ( $_REQUEST ['new_master'] ) && $_REQUEST ['new_master']) {
	?>
<h2>Выбирайте мастер-пароль.</h2>
<table cellspacing="0" border="0" class="passes">
	
	
<?php
	
	for($i = 0; $i < 10; ++ $i) {
		$str = 'ABCDEFGHIJKLMNOPQRSTUVWZYZabcdefghijklmnopqrstuvwxyz';
		
		$rand = rand ( 10, 100 );
		while ( $rand -- ) {
			$str = str_shuffle ( $str );
		}
		
		echo "<tr><td>" . substr ( $str, 0, 8 ) . '</td></tr>';
	
	}
	?>
	</table>
	<?php
}
?>
<script type="text/javascript">
function resource_changed()
{
	var rev = keyval[document.getElementById('for-select').value];
	document.getElementById("input-rev").value = rev.Rev;
	document.getElementById("select-restrictions").value = rev.Restrict;
	document.getElementById("input-length").value = rev.Len;
	
}
</script>
<h2>Данные</h2>
<form method="post">
<table cellspacing="0" border="0">
	<tr>
		<td>Ресурс:</td>
		<td><select name="for" id="for-select" onchange="resource_changed();" title="Название ресурса. Перечислены ресурсы, для которых хотя бы раз был сгенерирован пароль.">
<?php
foreach ( $options as $v ) {
	echo "<option value=\"${v['Name']}\"";
	if (isset ( $resource ) && $resource == $v['Name'])
		echo "selected = selected";
	echo ">${v['Name']}</option>";
}
?>
</select>
<script type="text/javascript">

</script>
</td>
		<input type="hidden" name="new_master" value="">
	</tr>
	<tr>
		<td>Ресурс вручную:</td>
		<td><input type="text" name="custom" title="Название ресурса, если оно не перечислено выше"></td>
	</tr>
	<tr>
		<td>Длина:</td>
		<td><input type="text" name="length" value="12" id="input-length" title="Длина генерируемого пароля. Менять не рекомендуется."></td>
	</tr>
	<tr>
		<td>Ревизия:</td>
		<td><input type="text" name="revision" id = "input-rev" value="0" title="Для ресурсов, требующих смену пароля. Числовое значение, меняющее генерируемый пароль"></td>
	</tr>
	<tr>
		<td>Ограничения</td>
		<td>
			<select name="restrictions" id="select-restrictions" style="width: 100%">
				<option value="">Без ограничений</option>
				<option value="limitedSymbols">Буквы, цифры, _</option>
				<option value="noSymbols">Буквы, цифры</option>				
				<option value="letters">Только буквы</option>
				<option value="digits">Только цифры</option>
			</select>
		</td>
	</tr>
	<tr>
		<td>Мастер-пароль</td>
		<td><input type="password" name="master" class="input-master" title="Пароль, на основании которого генерируется пароль для выбранного ресурса выбранной ревизии. Не допускать компрометации! Строго не рекомендуется сохранять пароль в браузере."></td>
	</tr>
	<tr>
		<td colspan="2"><input type="submit" name="generate"
			value="Сгенерировать!"></td>
	</tr>

</table>
</form>
<form><input type="submit" name="new_master"
	value="Нужен новый мастер-пароль"></form>
<hr>
<center>
<h3>История изменений</h3>
<table class="passes">
<thead>
<tr>
	<td>Версия</td>
	<td>Дата</td>
	<td>Изменения</td>
</tr>
</thead>
<tbody>
<tr>
	
	<td>0.1</td>
	<td>Lost in time</td>
	<td>Первая версия</td>
</tr>
<tr>
	<td>0.2</td>
	<td>28.07.2012</td>
	<td><ul>
		<li>Сохранение ревизий</li>
		<li>Не показываются символы<br/>мастер-пароля, только<br/>первые байты SHA хеша</li>
		<li>Изменения дизайна</li>
		<li>Добавлены ограничения</li>
		</ul>
		Обратная совместимость<br/>сохранена
		</td>
</tr>
</tbody>
</table>
<b>[Passwords generator]</b><br/>by gurux13 &copy; 2012
</center>
</body>
</html>